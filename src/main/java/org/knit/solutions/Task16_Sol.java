package org.knit.solutions;

import org.knit.TaskDescription;
import org.knit.solutions.Task16.Glyph;
import org.knit.solutions.Task16.GlyphFactory;

/*
–ó–∞–¥–∞—á–∞:
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.

–ö–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª (Character) –∏–º–µ–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–∫–æ–¥ —Å–∏–º–≤–æ–ª–∞) –∏ –≤–Ω–µ—à–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã x, y –∏ —Å—Ç–∏–ª—å).
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –§–∞–±—Ä–∏–∫—É –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω—Ü–µ–≤, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã —Å–∏–º–≤–æ–ª–æ–≤ –∏ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤, —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ.
üìå –ü–æ–¥—Å–∫–∞–∑–∫–∞:
–í–Ω–µ—à–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –º–µ—Ç–æ–¥ render(), –∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–æ–≤, —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö —Ñ–∞–±—Ä–∏–∫–æ–π.
 */

@TaskDescription(taskNumber = 16, taskDescription = "–ü–∞—Ç—Ç–µ—Ä–Ω –ü—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–µ—Ü (Flyweight)", href = "org/knit/solutions/taskExampleClasses/README.md")
public class Task16_Sol implements Solution {
    @Override
    public void execute() {
        System.out.println("–ó–∞–¥–∞—á–∞ 16 –∑–∞–ø—É—â–µ–Ω–∞");
        GlyphFactory factory = new GlyphFactory();
        String text = "ABBA";
        int x = 0;
        for (char c : text.toCharArray()) {
            Glyph glyph = factory.getGlyph(c);
            glyph.render(x++, 0, "bold");
        }
    }
}
